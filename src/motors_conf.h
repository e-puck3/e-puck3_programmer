/**
 * @file	motors_conf.h
 * @brief  	Configuration file for the motors library
 * 
 * @written by  	Eliot Ferragni
 * @creation date	29.07.2019
 */

#define NB_OF_HALF_BRIDGES 		12

#define NB_OF_BRUSHLESS_MOTOR	4

/********************                  MOTORS CONFIG                ********************/

#if (NB_OF_BRUSHLESS_MOTOR > 0)							// example for the BETAFPV 1103 11000KV motor
#define BRUSHLESS_MOTOR_1_PHASE1						HALF_BRIDGE_1
#define BRUSHLESS_MOTOR_1_PHASE2						HALF_BRIDGE_2
#define BRUSHLESS_MOTOR_1_PHASE3						HALF_BRIDGE_3
#define BRUSHLESS_MOTOR_1_COMMUTATION					DOUBLE_PWM
#define BRUSHLESS_MOTOR_1_DIRECTION						CW
#define BRUSHLESS_MOTOR_1_NB_POLES 						12		//to find it, simply count how many steps you feel to complete one turn and divide it by 3
#define BRUSHLESS_MOTOR_1_ADVANCE_DEG					30.0f	//It is the advance angle for the commutation. Good for small motors, should be less for big motors
#define BRUSHLESS_MOTOR_1_STARTUP_DUTY_CYCLE 			10		//duty_cycle to use to start the motor to not toast it
#define BRUSHLESS_MOTOR_1_STARTUP_TIMEOUT_TIME 			TIME_MS2I(1500)	//timeout to detect when we have a bad startup and stop trying to start it
#define BRUSHLESS_MOTOR_1_STARTUP_COMMUTATION_FREQ_HZ	135		//forced commutation frequency for the startup sequence while no ZC is found until STARTUP_TIMEOUT_TIME
#define BRUSHLESS_MOTOR_1_SPINNING_SPEED_THRESHOLD		3000    //rpm to reach to consider the motor spinning (not beginning to spin)
#endif

#if (NB_OF_BRUSHLESS_MOTOR > 1)
#define BRUSHLESS_MOTOR_2_PHASE1						HALF_BRIDGE_4
#define BRUSHLESS_MOTOR_2_PHASE2						HALF_BRIDGE_5
#define BRUSHLESS_MOTOR_2_PHASE3						HALF_BRIDGE_6
#define BRUSHLESS_MOTOR_2_COMMUTATION					DOUBLE_PWM
#define BRUSHLESS_MOTOR_2_DIRECTION						CW
#define BRUSHLESS_MOTOR_2_NB_POLES 						12
#define BRUSHLESS_MOTOR_2_ADVANCE_DEG					30.0f
#define BRUSHLESS_MOTOR_2_STARTUP_DUTY_CYCLE 			10
#define BRUSHLESS_MOTOR_2_STARTUP_TIMEOUT_TIME 			TIME_MS2I(1500)
#define BRUSHLESS_MOTOR_2_STARTUP_COMMUTATION_FREQ_HZ	135
#define BRUSHLESS_MOTOR_2_SPINNING_SPEED_THRESHOLD		3000
#endif

#if (NB_OF_BRUSHLESS_MOTOR > 2)
#define BRUSHLESS_MOTOR_3_PHASE1						HALF_BRIDGE_7
#define BRUSHLESS_MOTOR_3_PHASE2						HALF_BRIDGE_8
#define BRUSHLESS_MOTOR_3_PHASE3						HALF_BRIDGE_9
#define BRUSHLESS_MOTOR_3_COMMUTATION					DOUBLE_PWM
#define BRUSHLESS_MOTOR_3_DIRECTION						CW
#define BRUSHLESS_MOTOR_3_NB_POLES 						12
#define BRUSHLESS_MOTOR_3_ADVANCE_DEG					30.0f
#define BRUSHLESS_MOTOR_3_STARTUP_DUTY_CYCLE 			10
#define BRUSHLESS_MOTOR_3_STARTUP_TIMEOUT_TIME 			TIME_MS2I(1500)
#define BRUSHLESS_MOTOR_3_STARTUP_COMMUTATION_FREQ_HZ	135
#define BRUSHLESS_MOTOR_3_SPINNING_SPEED_THRESHOLD		3000
#endif

#if (NB_OF_BRUSHLESS_MOTOR > 3)							//example for the Align 430XL motor
#define BRUSHLESS_MOTOR_4_PHASE1						HALF_BRIDGE_10
#define BRUSHLESS_MOTOR_4_PHASE2						HALF_BRIDGE_11
#define BRUSHLESS_MOTOR_4_PHASE3						HALF_BRIDGE_12
#define BRUSHLESS_MOTOR_4_COMMUTATION					DOUBLE_PWM
#define BRUSHLESS_MOTOR_4_DIRECTION						CW
#define BRUSHLESS_MOTOR_4_NB_POLES 						6
#define BRUSHLESS_MOTOR_4_ADVANCE_DEG					15.0f
#define BRUSHLESS_MOTOR_4_STARTUP_DUTY_CYCLE 			10
#define BRUSHLESS_MOTOR_4_STARTUP_TIMEOUT_TIME 			TIME_MS2I(3000)
#define BRUSHLESS_MOTOR_4_STARTUP_COMMUTATION_FREQ_HZ	5
#define BRUSHLESS_MOTOR_4_SPINNING_SPEED_THRESHOLD		3000
#endif

/********************              BOARD SPECIFIC CONFIG            ********************/

/* Voltage measurement must be on ADC3 and Current measurement on ADC2 without conflict */

/* The pins should be configured accordingly to the following config in the board config file
 * in order to be controllable by the timers (correct alternate function selected and highest speed) */

#if (NB_OF_HALF_BRIDGES > 0)
#define P_CONTROL_LINE_1			LINE_H_BRIDGE_MOT1AP
#define N_CONTROL_LINE_1			LINE_H_BRIDGE_MOT1AN
#define PWM_DRIVER_1				&PWMD1
#define PWM_P_CHANNEL_1				TIM_CHANNEL_1
#define PWM_N_CHANNEL_1				TIM_CHANNEL_1
#define ADC3_VOLTAGE_CHANNEL_1		ADC_CHANNEL_IN5
#define ADC2_CURRENT_CHANNEL_1		ADC_CHANNEL_IN12
#endif /* (NB_OF_HALF_BRIDGES > 0) */

#if (NB_OF_HALF_BRIDGES > 1)
#define P_CONTROL_LINE_2			LINE_H_BRIDGE_MOT1BP
#define N_CONTROL_LINE_2			LINE_H_BRIDGE_MOT1BN
#define PWM_DRIVER_2				&PWMD1
#define PWM_P_CHANNEL_2				TIM_CHANNEL_2
#define PWM_N_CHANNEL_2				TIM_CHANNEL_2
#define ADC3_VOLTAGE_CHANNEL_2		ADC_CHANNEL_IN14
#define ADC2_CURRENT_CHANNEL_2		ADC_CHANNEL_IN13
#endif /* (NB_OF_HALF_BRIDGES > 1) */

#if (NB_OF_HALF_BRIDGES > 2)
#define P_CONTROL_LINE_3			LINE_H_BRIDGE_MOT1CP
#define N_CONTROL_LINE_3			LINE_H_BRIDGE_MOT1CN
#define PWM_DRIVER_3				&PWMD1
#define PWM_P_CHANNEL_3				TIM_CHANNEL_3
#define PWM_N_CHANNEL_3				TIM_CHANNEL_3
#define ADC3_VOLTAGE_CHANNEL_3		ADC_CHANNEL_IN15
#define ADC2_CURRENT_CHANNEL_3		ADC_CHANNEL_IN13	//same as phase 2
#endif /* (NB_OF_HALF_BRIDGES > 2) */

#if (NB_OF_HALF_BRIDGES > 3)
#define P_CONTROL_LINE_4			LINE_H_BRIDGE_MOT2AP
#define N_CONTROL_LINE_4			LINE_H_BRIDGE_MOT2AN
#define PWM_DRIVER_4				&PWMD2
#define PWM_P_CHANNEL_4				TIM_CHANNEL_1
#define PWM_N_CHANNEL_4				TIM_CHANNEL_2
#define ADC3_VOLTAGE_CHANNEL_4		ADC_CHANNEL_IN7
#define ADC2_CURRENT_CHANNEL_4		ADC_CHANNEL_IN4
#endif /* (NB_OF_HALF_BRIDGES > 3) */

#if (NB_OF_HALF_BRIDGES > 4)
#define P_CONTROL_LINE_5			LINE_H_BRIDGE_MOT2BP
#define N_CONTROL_LINE_5			LINE_H_BRIDGE_MOT2BN
#define PWM_DRIVER_5				&PWMD2
#define PWM_P_CHANNEL_5				TIM_CHANNEL_3
#define PWM_N_CHANNEL_5				TIM_CHANNEL_4
#define ADC3_VOLTAGE_CHANNEL_5		ADC_CHANNEL_IN8
#define ADC2_CURRENT_CHANNEL_5		ADC_CHANNEL_IN5
#endif /* (NB_OF_HALF_BRIDGES > 4) */

#if (NB_OF_HALF_BRIDGES > 5)
#define P_CONTROL_LINE_6			LINE_H_BRIDGE_MOT2CP
#define N_CONTROL_LINE_6			LINE_H_BRIDGE_MOT2CN
#define PWM_DRIVER_6				&PWMD3
#define PWM_P_CHANNEL_6				TIM_CHANNEL_1
#define PWM_N_CHANNEL_6				TIM_CHANNEL_2
#define ADC3_VOLTAGE_CHANNEL_6		ADC_CHANNEL_IN10
#define ADC2_CURRENT_CHANNEL_6		ADC_CHANNEL_IN5		//same as phase 2
#endif /* (NB_OF_HALF_BRIDGES > 5) */

#if (NB_OF_HALF_BRIDGES > 6)
#define P_CONTROL_LINE_7			LINE_H_BRIDGE_MOT3AP
#define N_CONTROL_LINE_7			LINE_H_BRIDGE_MOT3AN
#define PWM_DRIVER_7				&PWMD3
#define PWM_P_CHANNEL_7				TIM_CHANNEL_3
#define PWM_N_CHANNEL_7				TIM_CHANNEL_4
#define ADC3_VOLTAGE_CHANNEL_7		ADC_CHANNEL_IN4
#define ADC2_CURRENT_CHANNEL_7		ADC_CHANNEL_IN6
#endif /* (NB_OF_HALF_BRIDGES > 6) */

#if (NB_OF_HALF_BRIDGES > 7)
#define P_CONTROL_LINE_8			LINE_H_BRIDGE_MOT3BP
#define N_CONTROL_LINE_8			LINE_H_BRIDGE_MOT3BN
#define PWM_DRIVER_8				&PWMD4
#define PWM_P_CHANNEL_8				TIM_CHANNEL_1
#define PWM_N_CHANNEL_8				TIM_CHANNEL_2
#define ADC3_VOLTAGE_CHANNEL_8		ADC_CHANNEL_IN6
#define ADC2_CURRENT_CHANNEL_8		ADC_CHANNEL_IN15
#endif /* (NB_OF_HALF_BRIDGES > 7) */

#if (NB_OF_HALF_BRIDGES > 8)
#define P_CONTROL_LINE_9			LINE_H_BRIDGE_MOT3CP
#define N_CONTROL_LINE_9			LINE_H_BRIDGE_MOT3CN
#define PWM_DRIVER_9				&PWMD4
#define PWM_P_CHANNEL_9				TIM_CHANNEL_3
#define PWM_N_CHANNEL_9				TIM_CHANNEL_4
#define ADC3_VOLTAGE_CHANNEL_9		ADC_CHANNEL_IN9
#define ADC2_CURRENT_CHANNEL_9		ADC_CHANNEL_IN15 	//same as phase 2
#endif /* (NB_OF_HALF_BRIDGES > 8) */

#if (NB_OF_HALF_BRIDGES > 9)
#define P_CONTROL_LINE_10			LINE_H_BRIDGE_MOT4AP
#define N_CONTROL_LINE_10			LINE_H_BRIDGE_MOT4AN
#define PWM_DRIVER_10				&PWMD8
#define PWM_P_CHANNEL_10			TIM_CHANNEL_1
#define PWM_N_CHANNEL_10			TIM_CHANNEL_1
#define ADC3_VOLTAGE_CHANNEL_10		ADC_CHANNEL_IN1
#define ADC2_CURRENT_CHANNEL_10		ADC_CHANNEL_IN9
#endif /* (NB_OF_HALF_BRIDGES > 9) */

#if (NB_OF_HALF_BRIDGES > 10)
#define P_CONTROL_LINE_11			LINE_H_BRIDGE_MOT4BP
#define N_CONTROL_LINE_11			LINE_H_BRIDGE_MOT4BN
#define PWM_DRIVER_11				&PWMD8
#define PWM_P_CHANNEL_11			TIM_CHANNEL_2
#define PWM_N_CHANNEL_11			TIM_CHANNEL_2
#define ADC3_VOLTAGE_CHANNEL_11		ADC_CHANNEL_IN2
#define ADC2_CURRENT_CHANNEL_11		ADC_CHANNEL_IN14
#endif /* (NB_OF_HALF_BRIDGES > 10) */

#if (NB_OF_HALF_BRIDGES > 11)
#define P_CONTROL_LINE_12			LINE_H_BRIDGE_MOT4CP
#define N_CONTROL_LINE_12			LINE_H_BRIDGE_MOT4CN
#define PWM_DRIVER_12				&PWMD8
#define PWM_P_CHANNEL_12			TIM_CHANNEL_3
#define PWM_N_CHANNEL_12			TIM_CHANNEL_3
#define ADC3_VOLTAGE_CHANNEL_12		ADC_CHANNEL_IN3
#define ADC2_CURRENT_CHANNEL_12		ADC_CHANNEL_IN14 	//same as phase 2
#endif /* (NB_OF_HALF_BRIDGES > 11) */


